import a.util.Set;
import a.util.ArraySet;
import a.util.Map;
import a.util.ArrayMap;
import a.natives.Player;
import a.natives.playergroup;
import a.natives.unit;
import a.natives.trigger;

include "pokemon.a"
include "species.a"
include "rental.a"

void initTrainer(int player, Team team) {
    Player p = (Player) player;
    if (!p.isActive()) return;
    
    team.addTrainer(new Trainer(p, team));
    System.debug("Added player " + p.toString() + " to " + team.name);
    
    makeRentalCenter(p);
    CameraPan(player, p.startLocation, 0, 0, 0, false);
}

static {
    Team.left = new Team("Left Team", Point(8, 36), (Player) 9);
    Team.right = new Team("Right Team", Point(136, 36), (Player) 10);
    int centerX = 72;
    Team.left.enemy = Team.right;
    Team.right.enemy = Team.left;
    
    Trainer.trainers = new ArrayMap<Player, Trainer>();
    
    initTrainer(1, Team.left);
    initTrainer(2, Team.left);
    initTrainer(3, Team.right);
    initTrainer(4, Team.right);
    
    libNtve_gf_SetPlayerGroupAlliance(Team.left.group, 2);
    libNtve_gf_SetPlayerGroupAlliance(Team.right.group, 2);
}

class Team {
    static Team left, right;
    
    string name;
    point spawn;
    Player cpu;
    playergroup group;
    Set<Trainer> trainers;
    Team enemy;
    
    Team(string name, point spawn, Player cpu) {
        this.name = name;
        this.spawn = spawn;
        this.cpu = cpu;
        group = playergroup.empty();
        group.add(cpu);
        this.trainers = new ArraySet<Trainer>();
    }
    
    public int size() {
        return trainers.size();
    }
    
    public string toString() {
        return name;
    }
    
    public void addTrainer(Trainer trainer) {
        trainers.add(trainer);
        group.add(trainer.player);
    }
    
}

class Trainer {
    public static Map<Player, Trainer> trainers;
    
    public static Trainer getTrainer(int player) {
        return trainers.getValue((Player)player);
    }
    
    Player player;
    Team team;
    Set<Pokemon> pokemon;
    
    public Trainer(Player player, Team team) {
        this.player = player;
        player.minerals = 100;
        this.team = team;
        this.pokemon = new ArraySet<Pokemon>();
        trainers.put(player, this);
    }
    
    public void addPokemon(PokemonSpecies species) {
        pokemon.add(new Pokemon(species, 10, player, team.spawn));
    }
    
    public static void addPokemon(Player player, PokemonSpecies species) {
        trainers.getValue(player).addPokemon(species);
    }
}


