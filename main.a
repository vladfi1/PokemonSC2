import a.natives.trigger;
import a.natives.point;
import a.natives.timer;

include "species.a"
include "player.a"

static {
    VisEnable(c_visTypeFog, false);

    //point.fromId doesn't work :(
    //createUnitHelper("Tower", 7, point.fromId(1));
    //createUnitHelper("Tower", 7, point.fromId(2));
    //createUnitHelper("Tower", 1, point.fromId(3));
    //createUnitHelper("Tower", 1, point.fromId(4));

    //trigger.create(createUnitChat.name).addEventChatMessage(c_playerAny, "", false);

    //trigger.create(print5.name).addEventUnitAbility(u.getUnitRef(), AbilityCommand("Print", 0), -3, false);

    timer t = timer.create();
    t.start(15, true, timer.GAME_TIME);

    trigger.create(makeWave.name).addEventTimer(t);
    
    /*
    for (int i=1; i<=3; ++i) {
        for (int j=i+1; j<=3; ++j) {
            libNtve_gf_SetAlliance(i, j, 2);
            libNtve_gf_SetAlliance(i+3, j+3, 2);
        }
        libNtve_gf_SetAlliance(i, 7, 2);
        libNtve_gf_SetAlliance(i+3, 8, 2);
    }*/
}

bool makeWave(bool b1, bool b2) {
    waveHelper(Team.left, 1);
    waveHelper(Team.right, -1);
    return true;
}

void waveHelper(Team team, int dx) {
    int spawn_dx = 18 * dx;
    int attack_dx = 100 * dx;

    Iterator<Trainer> trainers = team.trainers.getIterator();
    
    while(trainers.hasNext()) {
        Trainer trainer = trainers.next();
        Iterator<Pokemon> pokemon = trainer.pokemon.getIterator();
        
        while(pokemon.hasNext()) {
            Pokemon p = pokemon.next();
            
            point spawn = p.getUnit().getPosition().translateXY(spawn_dx, 0);
            Pokemon clone = p.clone(trainer.team.cpu, spawn);
            
            point attack = spawn.translateXY(attack_dx, 0);
            order o = OrderTargetingPoint(AbilityCommand("attack", 0), attack);
            UnitIssueOrder(clone.getUnit(), o, c_orderQueueAddToEnd);
        }
        
        delete pokemon;
    }
    
    delete trainers;
}
